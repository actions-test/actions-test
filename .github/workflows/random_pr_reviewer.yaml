name: Random PR Reviewer
on: pull_request

jobs:
  random-reviewer:
    runs-on: ubuntu-16.04

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Extract global code owners
        run: grep "^*\s*" CODEOWNERS | grep -o "@[^ ]*"  | sed -e 's/@\(.*\)\/\(.*\)/\1\/teams\/\2/g' > teams

      - name: Fetch team members
        run: |
          while read team; do
            echo "Fetching members for team $team"
            response=`curl "https://api.github.com/orgs/$team/members" -H "Authorization:Bearer ${{ secrets.MY_GITHUB_TOKEN }}"`
            echo $response
            echo $response | jq -r '.[].login' >> members
          done <teams

      - name: Select random member
        run: |
          pr_author=$(jq -r .sender.login "$GITHUB_EVENT_PATH")
          cat members | grep -v "$pr_author" | sort | uniq | sort -R | head -n 1 > random_reviewer

      - name: test
        run: cat "$GITHUB_EVENT_PATH"

      - name: Request review
        run: |
          random_reviewer=$(cat random_reviewer)
          if [ "$random_reviewer" = "" ]; then
            echo "there's no one to request a review from"
          else
            echo "requesting review from $random_reviewer"
            pull_number=$(jq -r .pull_request.number "$GITHUB_EVENT_PATH")
            cat <<EOF > data.json
            {"reviewers": ["$random_reviewer"]}
          EOF
            curl -d "@data.json" -H "Authorization:Bearer ${{ secrets.MY_GITHUB_TOKEN }}" -X POST "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$pull_number/requested_reviewers"
          fi