name: Random PR Reviewer
on: pull_request

jobs:
  random-reviewer:
    runs-on: ubuntu-16.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Checkout repo with global ignores
        uses: actions/checkout@v2
        with:
          repository: actions-test/global-ignore
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          path: global-ignore

      - name: Extract global code owners
        run: grep "^*\s*" CODEOWNERS | grep -o "@[^ ]*"  | sed -e 's/@\(.*\)\/\(.*\)/\1\/teams\/\2/g' > teams

      - name: Fetch team members
        run: |
          while read team || [ -n "$team" ]; do
            echo "Fetching members for team $team"
            response=`curl "https://api.github.com/orgs/$team/members" -H "Authorization:Bearer ${{ secrets.MY_GITHUB_TOKEN }}"`
            echo $response | jq -r '.[].login' >> members
          done <teams

      - name: Select random member
        run: |
          available_members=$(cat members | grep -v "^$GITHUB_ACTOR\s*$" | sort | uniq)

          if [ -f .pr_review_ignore ]; then
            while read ignore || [ -n "$ignore" ]; do
              available_members=$(printf $available_members | grep -v "^$ignore\s*$" | sort)
            done <.pr_review_ignore
          fi

          repo_name=$(echo $GITHUB_REPOSITORY | sed -e 's/.*\/\(.*\)/\1/')
          if [ -f "global-ignore/$repo_name/ignore_members" ]; then
            while read ignore || [ -n "$ignore" ]; do
              available_members=$(printf $available_members | grep -v "^$ignore\s*$" | sort)
            done <"global-ignore/$repo_name/ignore_members"
          fi

          printf "\nPicking from:\n$available_members\n\n"

          echo $available_members | sort -R | head -n 1 > random_reviewer
          echo "Picked: `cat random_reviewer`"

      - name: Request review
        run: |
          random_reviewer=$(cat random_reviewer)
          if [ "$random_reviewer" = "" ]; then
            echo "there's no one to request a review from"
          else
            echo "requesting review from $random_reviewer"
            pull_number=$(jq -r .pull_request.number "$GITHUB_EVENT_PATH")
            cat <<EOF > data.json
            {"reviewers": ["$random_reviewer"]}
          EOF
            curl -d "@data.json" -H "Authorization:Bearer ${{ secrets.MY_GITHUB_TOKEN }}" -X POST "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$pull_number/requested_reviewers"
          fi